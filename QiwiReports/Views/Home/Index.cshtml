@{
    Layout = null;
}
 
<html>
<head>
    <title>Ваган</title>
    <script src="~/Scripts/jquery.searchFilter.js" type="text/javascript"></script>
    <link href="~/Content/themes/base/all.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" type="text/css" />
    
    <script src="~/Scripts/jquery-2.1.1.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-2.1.1.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-ui-1.11.1.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-ui.min-1.11.1.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.jqGrid.min.js" type="text/javascript"></script>   
    <script src="~/Scripts/jquery.jqGrid.src.js" type="text/javascript"></script>
    <script src="~/Scripts/i18n/grid.locale-ru.js" type="text/javascript"></script>
    <link href="~/Content/jquery.jqGrid/searchFilter.css" rel="stylesheet" type="text/css" />
</head>
<body>
<h2>Список  </h2>
<table id="grps"></table>
<div id="pgrps"></div>
<a href="javascript:void(0)" id="cm1">Get Selected id's</a>
<script type="text/javascript">
    $(document).ready(function () {
        $("#grps").jqGrid({
            width: 1200,
            height: 600,
            url: '@Url.Action("GetData")',
            autowidth: true,
            multiselect: true,
            datatype: "json",
            colNames: ['ид', 'Id', 'Квартира', 'Сумма', 'trm_id', 'trm_txn_id', 'Сумма 2', 'Телефон', 'Дата получения', 'Обработано'],
            colModel: [
				{ name: 'Id', index: 'Id', width: 100, stype: 'text', key: true, editable: false, editoptions: { readonly: true, size: 10} },
				{ name: 'txn_id', index: 'txn_id', width: 100, stype: 'text'},
				{ name: 'account', index: 'account', width: 100 },
				{ name: 'amount', index: 'amount', width: 150 },
				{ name: 'trm_id', index: 'trm_txn_id', width: 100, align: "right" },
				{ name: 'trm_txn_id', index: 'trm_txn_id', width: 200, align: "right" },
				{ name: 'from_amount', index: 'from_amount', width: 100 },
				{ name: 'account1', index: 'account1', width: 200},
				{ name: 'dateReceive', index: 'dateReceive', width: 200, sortable: true, formatter: "date", formatter: currencyFmatter },
				{ name: 'IsComplete', index: 'IsComplete', width: 200, align: 'center', editable: true, edittype: 'checkbox',editoptions: {value:"Yes:No"} },
				],
            rowNum: 100, // число отображаемых строк
            pager: '#pgrps',
            sortname: 'dateReceive', // сортировка по умолчанию по столбцу Id
            sortorder: "desc", // порядок сортировки
            loadonce: true, // загрузка только один раз
            //multiselect: true,
            rowList: [100, 200, 300],
            caption: "Список Книг",
            viewrecords: true, 
			sortable: true,
			loadComplete: function () {
				var $this = $(this);
				if ($this.jqGrid('getGridParam', 'datatype') === 'json') {
					if ($this.jqGrid('getGridParam', 'sortname') !== '') {
						// we need reload grid only if we use sortname parameter,
						// but the server return unsorted data
						setTimeout(function () {
							$this.triggerHandler('reloadGrid');
						}, 50);
					}
				}
			}		
        });
        
        
		jQuery("#grps").jqGrid('navGrid', "#pgrps", {
			add: false,
			del: false,
			edit: true,
			search: true,
			searchtext: "Поиск",
			refresh: true,
			refreshtext: "Обновить", 
			edittext: "Обработать письмо"
			},
			update("edit"), // default settings for edit
			{}, // default settings for add
			{}, // delete instead that del:false we need this
			{closeOnEscape:true, multipleSearch:true}, // search options
			{} /* view parameters*/
		);

	    function update(act) {
	        return {
	            closeAfterAdd: true, // закрыть после добавления
	            height: 250,
	            width: 400,
	            closeAfterEdit: true, // закрыть после редактирования
	            reloadAfterSubmit: true, // обновление
	            drag: true,
	            onclickSubmit: function (params) {
	                var list = $("#jqg");
	                var selectedRow = list.getGridParam("selrow");
	                rowData = list.getRowData(selectedRow);
					if (act === "edit")
	                    params.url = '@Url.Action("Edit")';
	            },
	            afterSubmit: function (response, postdata) {
	                // обновление грида
	                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid')
	                return [true, "", 0]
	            }
        	};
    	};
	});

    function currencyFmatter(cellvalue, options, rowObject) {
        var y = Number(cellvalue.substring(0, 4));
        var m = Number(cellvalue.substring(5, 7));
        var d = cellvalue.substring(8, 10);
        var h = cellvalue.substring(11, 13);
        var mm = cellvalue.substring(14, 16);
        return String(d) + '/' + String(m) + '/' + String(y) + ' ' + String(h) + ':' + String(mm);
    }

    jQuery("#cm1").click(function () {
        var s;
        s = jQuery("#grps").jqGrid('getGridParam', 'selarrrow');
        var name = s;
        var person = { Name: name };
        $.post('@Url.Action("Edit")', { name: JSON.stringify(s) }, null, "json");
    });

</script> 
</body>
</html>